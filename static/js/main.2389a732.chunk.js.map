{"version":3,"sources":["images/plus_icon.png","components/Header.js","components/Anime.js","components/AniCards.js","components/TodayItem.js","components/Today.js","components/Schedule.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","onClick","scroll","scrollToTop","duration","Anime","state","isSelected","props","selectedCards","includes","anime","mal_id","id","this","delAnime","addAnime","setState","title","image_url","url","style","selectedStyle","toggleSelected","src","alt","imgStyle","plus_icon","href","target","rel","Component","display","height","width","objectFit","borderRadius","margin","filter","color","transform","backgroundColor","aniCardsStyle","flexDirection","flexWrap","justifyContent","AniCards","animes","map","key","showMore","TodayItem","date","Date","airing_start","hour","getHours","min","getMinutes","ampm","airTime","timeStyle","float","marginRight","textAlign","marginBottom","months","days","Today","schedule","sort","aniA","aniB","dateA","dateB","setMonth","setDate","day","slice","toUpperCase","curr","today","getDate","getDay","indexOf","todayDate","todayDateStr","getMonth","todayStyle","length","emptyStyle","i","borderTop","paddingTop","padding","minWidth","flex","emptySchedule","sunday","monday","tuesday","wednesday","thursday","friday","saturday","Schedule","fullSchedule","mySchedule","watchlist","componentDidMount","a","loadSchedule","getSchedule","jikanjs","console","log","setWatchlist","watching","prevWatchlist","JSON","stringify","forEach","localTime","dayOfWeek","push","to","smooth","offset","tipStyle","scheduleStyle","name","alignItems","paddingLeft","marginTop","App","loadSeason","filterOngoing","res","seasonal","concat","watchingCookie","itemID","renderWatchlist","more","numDisplayed","numDisplayedCookie","cookies","displayedCookie","get","displayed","parseInt","seasonalIDs","filtered","yearLater","setFullYear","getFullYear","set","expires","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2389a732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus_icon.83015675.png\";","import React from 'react';\r\nimport './Header.css';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\n\r\nexport default function Header() {\r\n\tconst scrollToTop = () => {\r\n\t\tscroll.scrollToTop({duration: 500})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<h1 onClick={() => scrollToTop()}\r\n\t\t\t\t\tclassName='header-text'>\r\n\t\t\t\tMyAnimeSchedule\r\n\t\t\t</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Anime.css';\r\nimport plus_icon from '../images/plus_icon.png'\r\n\r\nclass Anime extends Component {\r\n\tstate = {\r\n\t\tisSelected: this.props.selectedCards.includes(\r\n\t\t\t\t\t\t\t\t\tthis.props.anime.mal_id\r\n\t\t\t\t\t\t\t\t)\r\n\t}\r\n\r\n\ttoggleSelected(id) {\r\n\t\tconst { delAnime, addAnime } = this.props;\r\n\t\tthis.state.isSelected ? delAnime(id) : addAnime(id)\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tisSelected: !this.state.isSelected\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { title, mal_id, image_url, url } = this.props.anime;\r\n\t\tconst isSelected = this.state.isSelected;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='card' \r\n\t\t\t\t\t style={ isSelected ? selectedStyle : {} }\r\n\t\t\t\t\t >\r\n\t\t\t\t<div onClick={ () => this.toggleSelected(mal_id)} \r\n\t\t\t\t\t\t className={ isSelected ? \r\n\t\t\t\t\t\t\t\t\t\t\t\t 'image-selected' : 'image-container'}\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t<img src={image_url} \r\n\t\t\t\t\t\t\t alt={title}\r\n\t\t\t\t\t\t   style={imgStyle} \r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t<img src={plus_icon}\r\n\t\t\t\t\t\t\t alt={'Add Anime'}\r\n\t\t\t\t\t\t\t className='plus-icon'\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n\t\t\t\t\t<p className='title'>{title}</p>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst imgStyle = {\r\n\tdisplay: 'relative',\r\n\theight: '190px',\r\n\twidth: '100%',\r\n\tobjectFit: 'cover',\r\n\tborderRadius: '6px 6px 0 0',\r\n\tmargin: '0'\r\n}\r\n\r\nconst selectedStyle = {\r\n\tfilter: 'brightness(1.2)',\r\n\tcolor: '#ccc',\r\n\ttransform: 'translateY(-8px)',\r\n\tbackgroundColor : 'green'\r\n}\r\n\r\nAnime.propTypes = {\r\n\tanime: PropTypes.object.isRequired,\r\n\tselectedCards: PropTypes.array.isRequired,\r\n\taddAnime: PropTypes.func.isRequired,\r\n\tdelAnime: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Anime;","import React from 'react';\r\nimport Anime from './Anime';\r\nimport PropTypes from 'prop-types';\r\nimport './AniCards.css';\r\n\r\nfunction AniCards(props) {\r\n\tconst animes = props.animes;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={aniCardsStyle}>\r\n\t\t\t\t{animes.map(\r\n\t\t\t\t\t(anime) => (\r\n\t\t\t\t\t\t<Anime anime={ anime } \r\n\t\t\t\t\t\t\t\t\t selectedCards={ props.selectedCards }\r\n\t\t\t\t\t\t\t\t\t addAnime={ props.addAnime }\r\n\t\t\t\t\t\t\t\t\t delAnime={ props.delAnime }\r\n\t\t\t\t\t\t\t\t\t key={ anime.mal_id }\r\n\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<button className=\"show-btn\"\r\n\t\t\t\t\t\t\t\tonClick={() => props.showMore(true)}>\r\n\t\t\t\t\tshow more\r\n\t\t\t</button>\r\n\t\t\t<button className=\"show-btn\"\r\n\t\t\t\t\t\t\t\tonClick={() => props.showMore(false)}>\r\n\t\t\t\t\tshow less\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst aniCardsStyle = {\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'row',\r\n\tflexWrap: 'wrap',\r\n\tjustifyContent: 'center',\r\n}\r\n\r\nAniCards.propTypes = {\r\n\tanimes: PropTypes.array.isRequired,\r\n\tselectedCards: PropTypes.array.isRequired,\r\n\taddAnime: PropTypes.func.isRequired,\r\n\tdelAnime: PropTypes.func.isRequired,\r\n\tshowMore: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AniCards;","import React from 'react';\r\nimport './TodayItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TodayItem(props) {\r\n\tconst date = new Date(props.anime.airing_start);\r\n\tlet hour = date.getHours(); \r\n\tlet min = date.getMinutes();\r\n\tconst ampm = (hour < 12) ? 'AM' : 'PM';\r\n\thour = (hour <= 12) ? hour : hour % 12;\r\n\tmin = (min < 10) ? '0'+min : min;\r\n\r\n\tconst airTime = hour + ':' + min + ' ' + ampm;\r\n\tconst { image_url, title, url } = props.anime;\r\n\treturn (\r\n\t\t<div className=\"today-item\">\r\n\t\t\t<p style={timeStyle}>{airTime}</p>\r\n\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t<img src={image_url}\r\n\t\t\t     alt={title}\r\n\t\t\t\t\t style={imgStyle}/>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t<div className='item-title'>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</div>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst imgStyle = {\r\n\tfloat: 'left',\r\n\twidth: '60px',\r\n\theight: '60px',\r\n\tmarginRight: '10px',\r\n\tobjectFit: 'cover',\r\n\tborderRadius: '6px',\r\n}\r\nconst timeStyle = {\r\n\ttextAlign: 'left',\r\n\tmarginBottom: '5px',\r\n}\r\n\r\nTodayItem.propTypes = {\r\n\tanime: PropTypes.object.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodayItem from './TodayItem';\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\nconst days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n\r\nexport default function Today(props) {\r\n\tconst compareTime = (aniA, aniB) => {\r\n\t\tconst dateA = new Date(aniA.airing_start);\r\n\t\tconst dateB = new Date(aniB.airing_start);\r\n\t\tdateA.setMonth(0); dateA.setDate(1);\r\n\t\tdateB.setMonth(0); dateB.setDate(1);\r\n\r\n\t\treturn ( dateA - dateB )\r\n\t}\r\n\r\n\tlet schedule = props.schedule\r\n\tschedule.sort(compareTime)\r\n\tconst day = props.day.slice(0,1).toUpperCase() + props.day.slice(1)\r\n\t// get date of current day\r\n\tconst curr = new Date()\r\n\tconst today = curr.getDate() - curr.getDay() + days.indexOf(props.day);\r\n\tconst todayDate = new Date(curr.setDate(today))\r\n\r\n\tconst todayDateStr = `${months[todayDate.getMonth()]} ${todayDate.getDate()}`;\r\n\r\n\treturn (\r\n\t\t<div style={todayStyle}>\r\n\t\t\t<div style={{marginBottom: '10px'}}>\r\n\t\t\t\t<p>{day}</p>\r\n\t\t\t\t<p>{todayDateStr}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{schedule.length === 0 ?\r\n\t\t\t\t<p style={emptyStyle}>Slow day...</p> :\r\n\r\n\t\t\t\tprops.schedule.map((anime,i) => (\r\n\t\t\t\t\t<TodayItem anime={anime}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={anime.mal_id}/>\r\n\t\t\t\t))}\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst emptyStyle = {\r\n\tborderTop: 'solid 1.2px #444',\r\n\tpaddingTop: '10px'\r\n}\r\n\r\nconst todayStyle = {\r\n\tpadding: '10px 10px 4px 10px',\r\n\tmargin: '5px',\r\n\tminWidth: '200px',\r\n\theight: 'inherit',\r\n\tflex: '1',\r\n\tbackgroundColor: '#222',\r\n\t//border: 'solid 1px #EEE',\r\n\tborderRadius: '10px'\r\n}\r\n\r\nToday.propTypes = {\r\n\tday: PropTypes.string.isRequired,\r\n\tschedule: PropTypes.array.isRequired\r\n}","import React, { Component } from 'react';\r\nimport Today from './Today';\r\nimport PropTypes from 'prop-types';\r\nimport './Schedule.css';\r\n\r\nimport jikanjs from 'jikanjs';\r\nimport { Link } from 'react-scroll';\r\n\r\nconst emptySchedule = {\r\n\tsunday: [],\r\n\tmonday: [],\r\n\ttuesday: [],\r\n\twednesday: [],\r\n\tthursday: [],\r\n\tfriday: [],\r\n\tsaturday: []\r\n}\r\n\r\nconst days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n\r\nclass Schedule extends Component {\r\n\tstate = {\r\n\t\tfullSchedule: {},\r\n\t\tmySchedule: emptySchedule,\r\n\t\twatchlist: []\r\n\t}\r\n\r\n\tcomponentDidMount = async() => {\r\n\t\tawait this.loadSchedule()\r\n\t\tthis.getSchedule()\r\n\t}\r\n\r\n\tloadSchedule = async() => {\r\n\t\ttry {\r\n\t\t\tlet schedule = await jikanjs.loadSchedule()\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tfullSchedule: schedule\r\n\t\t\t})\r\n\t\t} \r\n\t\tcatch(err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetSchedule = async() => {\r\n\t\tawait this.props.setWatchlist();\r\n\t\r\n\t\tconst watchlist = this.props.watching.slice();\r\n\t\tconst prevWatchlist = this.state.watchlist.slice();\r\n\t\twatchlist.sort();\r\n\t\tprevWatchlist.sort();\r\n\r\n\t\tif (watchlist.length === 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmySchedule: emptySchedule,\r\n\t\t\t\twatchlist: []\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Check if user selects something different\r\n\t\telse if (JSON.stringify(watchlist) !== JSON.stringify(prevWatchlist)) {\t\t\t\r\n\t\t\t//filter the fullSchedule for a personalized one\r\n\t\t\tlet schedule = {\r\n\t\t\t\tsunday: [],\r\n\t\t\t\tmonday: [],\r\n\t\t\t\ttuesday: [],\r\n\t\t\t\twednesday: [],\r\n\t\t\t\tthursday: [],\r\n\t\t\t\tfriday: [],\r\n\t\t\t\tsaturday: []\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tdays.forEach((day) => {\r\n\t\t\t\tconst airing = this.state.fullSchedule[day];\r\n\t\t\t\t\r\n\t\t\t\tconst airingSelected = airing.filter((anime) => (\r\n\t\t\t\t\twatchlist.includes(anime.mal_id)\r\n\t\t\t\t));\r\n\t\t\t\t// add each anime to schedule based on local time\r\n\t\t\t\tairingSelected.forEach((anime) => {\r\n\t\t\t\t\tconst localTime = new Date(anime.airing_start);\r\n\t\t\t\t\tconst dayOfWeek = days[localTime.getDay()] //sun-sat\r\n\r\n\t\t\t\t\tschedule[dayOfWeek].push(anime);\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tmySchedule: schedule,\r\n\t\t\t\twatchlist: watchlist\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst schedule = this.state.mySchedule\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Link\r\n            to='schedule'\r\n            smooth={true}\r\n            offset={-90}\r\n\t\t\t\t\t\tduration= {600}\r\n\t\t\t\t\t\t>      \r\n\t\t\t\t\t<button className=\"get-btn\" \r\n\t\t\t\t\t\t\t\t\tonClick={() => this.getSchedule()}>\r\n\t\t\t\t\t\tGet Schedule\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t\r\n\t\t\t\t<p style={tipStyle}>\r\n\t\t\t\t\t* times are displayed in your local time zone\r\n\t\t\t\t</p>\r\n\t\t\t\t<div style={scheduleStyle} name='schedule'>\r\n\t\t\t\t\t{days.map((day) => (\r\n\t\t\t\t\t\t<Today day={day}\r\n\t\t\t\t\t\t\t\t\t schedule={schedule[day]}\r\n\t\t\t\t\t\t\t\t\t key={day}\r\n\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst scheduleStyle = {\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'row',\r\n\talignItems: 'flex-start',\r\n\tflexWrap: 'wrap',\r\n\tcolor: '#EEE'\r\n}\r\n\r\nconst tipStyle = {\r\n\ttextAlign: 'left',\r\n\tpaddingLeft: '10px',\r\n\tcolor: '#EEE',\r\n\tmarginTop: '40px'\r\n}\r\n\r\nSchedule.propTypes = {\r\n\twatching: PropTypes.array.isRequired,\r\n\tsetWatchlist: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Schedule;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { instanceOf } from 'prop-types';\r\nimport Header from './components/Header';\r\nimport AniCards from './components/AniCards';\r\nimport Schedule from './components/Schedule';\r\n\r\nimport jikanjs from 'jikanjs';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\n\r\nclass App extends Component {\r\n\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    const { cookies } = props;\r\n    const displayedCookie = cookies.get('numDisplayed')\r\n    const displayed = displayedCookie == null ? 20 : parseInt(displayedCookie)\r\n    this.state = {\r\n      watching: cookies.get('watching') || [],\r\n      seasonal: [],\r\n      renderWatchlist: cookies.get('watching') || [],\r\n      numDisplayed: displayed,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async() => {\r\n    await this.loadSeason();\r\n    this.filterOngoing();\r\n  }\r\n\r\n  filterOngoing() {\r\n    const { watching, seasonal } = this.state;\r\n    const seasonalIDs = seasonal.map((anime) => (anime.mal_id));\r\n    \r\n    const filtered = watching.filter((id) => (seasonalIDs.includes(id)));\r\n    this.watchingCookie(filtered);\r\n    this.setState({\r\n      watching: filtered\r\n    })\r\n  }\r\n\r\n  watchingCookie(watching) {\r\n    const { cookies } = this.props;\r\n    \r\n    const yearLater = new Date();\r\n    yearLater.setFullYear(yearLater.getFullYear() + 1);\r\n\r\n    cookies.set( 'watching', watching, { expires: yearLater });\r\n    this.setState({ watching });\r\n  }\r\n  numDisplayedCookie(numDisplayed) {\r\n    const { cookies } = this.props;\r\n\r\n    const yearLater = new Date();\r\n    yearLater.setFullYear(yearLater.getFullYear() + 1);\r\n\r\n    cookies.set( 'numDisplayed', numDisplayed, { expires: yearLater });\r\n    this.setState({ numDisplayed })\r\n  }\r\n\r\n  loadSeason = async() => {\r\n    try {\r\n      const res = await jikanjs.loadSeason();\r\n      this.setState({\r\n        seasonal: res.anime\r\n      })\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  addAnime = (id) => {\r\n    this.setState({\r\n      watching: this.state.watching.concat(id)\r\n    })\r\n    this.watchingCookie(this.state.watching.concat(id))\r\n  }\r\n\r\n  delAnime = (id) => {\r\n    const watching = this.state.watching.filter((itemID) => (\r\n      itemID !== id\r\n    ))\r\n    this.setState({\r\n      watching: watching\r\n    })\r\n    this.watchingCookie(watching);\r\n  }\r\n\r\n  setWatchlist = () => {\r\n    this.setState({\r\n      renderWatchlist: this.state.watching\r\n    })\r\n  }\r\n\r\n  showMore = (more) => {\r\n    const { seasonal, numDisplayed } = this.state\r\n\r\n    if (more) {\r\n      if ( numDisplayed < seasonal.length ) {\r\n        this.numDisplayedCookie(numDisplayed + 10)\r\n        \r\n        this.setState({\r\n          numDisplayed: numDisplayed + 10\r\n        })\r\n      }\r\n    } else {\r\n      if ( numDisplayed > 0 ) {\r\n        this.numDisplayedCookie(numDisplayed - 10)\r\n        \r\n        this.setState({\r\n          numDisplayed: numDisplayed - 10\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { renderWatchlist, watching } = this.state;\r\n    const animes = this.state.seasonal.slice(0, this.state.numDisplayed);\r\n    return (\r\n      <div className='container'>\r\n        <Header/>\r\n\r\n        <AniCards\r\n          animes={ animes } \r\n          selectedCards={ watching }\r\n          addAnime={ this.addAnime }\r\n          delAnime={ this.delAnime }\r\n          showMore={ this.showMore }\r\n          />\r\n        <br/><br/>\r\n        <Schedule watching={renderWatchlist} \r\n                  setWatchlist={this.setWatchlist}\r\n                  />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}