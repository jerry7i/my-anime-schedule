{"version":3,"sources":["images/plus_icon.png","components/Header.js","components/Anime.js","components/AniCards.js","components/TodayItem.js","components/Today.js","components/tokyoToLocalTime.js","components/Schedule.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","onClick","scroll","scrollToTop","duration","Anime","state","isSelected","props","selectedCards","includes","anime","mal_id","id","this","delAnime","addAnime","setState","title_english","title","images","url","style","selectedStyle","toggleSelected","src","jpg","image_url","alt","imgStyle","plus_icon","href","target","rel","Component","display","height","width","objectFit","borderRadius","margin","filter","color","transform","backgroundColor","aniCardsStyle","flexDirection","flexWrap","justifyContent","AniCards","animes","map","key","showMore","TodayItem","airTime","localTime","toFormat","timeStyle","float","marginRight","textAlign","marginBottom","months","days","Today","schedule","sort","aniA","aniB","toMillis","day","slice","toUpperCase","todayStyle","dayStyle","dateStyle","curr","Date","today","getDate","getDay","indexOf","todayDate","setDate","getMonth","getTodayDate","length","emptyStyle","i","borderTop","paddingTop","padding","minWidth","flex","fontSize","tokyoToLocalTime","time","split","Number","hour","minute","targetWeekday","Sundays","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","tokyoNow","DateTime","now","setZone","targetTokyo","set","second","millisecond","weekday","plus","Intl","DateTimeFormat","resolvedOptions","timeZone","startToLocalTime","start","fromISO","emptySchedule","sunday","monday","tuesday","wednesday","thursday","friday","saturday","Schedule","mySchedule","watchlist","componentDidMount","a","getSchedule","setWatchlist","watching","forEach","broadcast","dayOfWeek","aired","from","toLowerCase","push","to","smooth","offset","tipStyle","scheduleStyle","name","alignItems","paddingLeft","marginTop","App","loadSeason","filterOngoing","fetch","response","json","data","uniqueData","Array","Map","item","values","seasonal","console","error","concat","watchingCookie","itemID","watchingAnime","renderWatchlist","more","numDisplayed","numDisplayedCookie","cookies","displayedCookie","get","displayed","parseInt","seasonalIDs","filtered","yearLater","setFullYear","getFullYear","expires","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.92be278f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus_icon.83015675.png\";","import React from 'react';\r\nimport './Header.css';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\n\r\nexport default function Header() {\r\n\tconst scrollToTop = () => {\r\n\t\tscroll.scrollToTop({duration: 500})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<h1 onClick={() => scrollToTop()}\r\n\t\t\t\t\tclassName='header-text'>\r\n\t\t\t\tMyAnimeSchedule\r\n\t\t\t</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Anime.css\";\r\nimport plus_icon from \"../images/plus_icon.png\";\r\n\r\nclass Anime extends Component {\r\n  state = {\r\n    isSelected: this.props.selectedCards.includes(this.props.anime.mal_id),\r\n  };\r\n\r\n  toggleSelected(id) {\r\n    const { delAnime, addAnime } = this.props;\r\n    this.state.isSelected ? delAnime(id) : addAnime(id);\r\n\r\n    this.setState({\r\n      isSelected: !this.state.isSelected,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { title_english, title, mal_id, images, url } = this.props.anime;\r\n    const isSelected = this.state.isSelected;\r\n\r\n    return (\r\n      <div className=\"card\" style={isSelected ? selectedStyle : {}}>\r\n        <div\r\n          onClick={() => this.toggleSelected(mal_id)}\r\n          className={isSelected ? \"image-selected\" : \"image-container\"}\r\n        >\r\n          <img\r\n            src={images.jpg.image_url}\r\n            alt={title_english === null ? title : title_english}\r\n            style={imgStyle}\r\n          />\r\n          <img src={plus_icon} alt={\"Add Anime\"} className=\"plus-icon\" />\r\n        </div>\r\n\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <p className=\"title\">\r\n            {title_english === null ? title : title_english}\r\n          </p>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst imgStyle = {\r\n  display: \"relative\",\r\n  height: \"190px\",\r\n  width: \"100%\",\r\n  objectFit: \"cover\",\r\n  borderRadius: \"6px 6px 0 0\",\r\n  margin: \"0\",\r\n};\r\n\r\nconst selectedStyle = {\r\n  filter: \"brightness(1.2)\",\r\n  color: \"#ccc\",\r\n  transform: \"translateY(-8px)\",\r\n  backgroundColor: \"green\",\r\n};\r\n\r\nAnime.propTypes = {\r\n  anime: PropTypes.object.isRequired,\r\n  selectedCards: PropTypes.array.isRequired,\r\n  addAnime: PropTypes.func.isRequired,\r\n  delAnime: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Anime;\r\n","import React from \"react\";\r\nimport Anime from \"./Anime\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./AniCards.css\";\r\n\r\nfunction AniCards(props) {\r\n  const animes = props.animes;\r\n  return (\r\n    <>\r\n      <div style={aniCardsStyle}>\r\n        {animes.map((anime) => (\r\n          <Anime\r\n            anime={anime}\r\n            selectedCards={props.selectedCards}\r\n            addAnime={props.addAnime}\r\n            delAnime={props.delAnime}\r\n            key={anime.mal_id}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"show-btn\" onClick={() => props.showMore(true)}>\r\n        show more\r\n      </button>\r\n      <button className=\"show-btn\" onClick={() => props.showMore(false)}>\r\n        show less\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst aniCardsStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nAniCards.propTypes = {\r\n  animes: PropTypes.array.isRequired,\r\n  selectedCards: PropTypes.array.isRequired,\r\n  addAnime: PropTypes.func.isRequired,\r\n  delAnime: PropTypes.func.isRequired,\r\n  showMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AniCards;\r\n","import React from \"react\";\r\nimport \"./TodayItem.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TodayItem(props) {\r\n  const airTime = props.anime.localTime.toFormat(\"cccc, h:mm a\"); // e.g., \"Thursday, 11:26 AM\"\r\n\r\n  const { images, title_english, title, url } = props.anime;\r\n  return (\r\n    <div className=\"today-item\">\r\n      <p style={timeStyle}>{airTime}</p>\r\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img\r\n          src={images.jpg.image_url}\r\n          alt={title_english === null ? title : title_english}\r\n          style={imgStyle}\r\n        />\r\n\r\n        <div className=\"item-title\">\r\n          {title_english === null ? title : title_english}\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst imgStyle = {\r\n  float: \"left\",\r\n  width: \"60px\",\r\n  height: \"60px\",\r\n  marginRight: \"10px\",\r\n  objectFit: \"cover\",\r\n  borderRadius: \"6px\",\r\n};\r\nconst timeStyle = {\r\n  textAlign: \"left\",\r\n  marginBottom: \"5px\",\r\n};\r\n\r\nTodayItem.propTypes = {\r\n  anime: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodayItem from \"./TodayItem\";\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"Aug\",\r\n  \"Sept\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\nconst days = [\r\n  \"sunday\",\r\n  \"monday\",\r\n  \"tuesday\",\r\n  \"wednesday\",\r\n  \"thursday\",\r\n  \"friday\",\r\n  \"saturday\",\r\n];\r\n\r\nexport default function Today(props) {\r\n  const compareTime = (aniA, aniB) => {\r\n    if (!aniA.localTime || !aniB.localTime) return 0; // fallback if either is missing\r\n\r\n    return aniA.localTime.toMillis() - aniB.localTime.toMillis();\r\n  };\r\n\r\n  // get date of current day of week\r\n  const getTodayDate = (day) => {\r\n    const curr = new Date();\r\n    const today = curr.getDate() - curr.getDay() + days.indexOf(day);\r\n    const todayDate = new Date(curr.setDate(today));\r\n    const todayDateStr = `${\r\n      months[todayDate.getMonth()]\r\n    } ${todayDate.getDate()}`;\r\n\r\n    return todayDateStr;\r\n  };\r\n\r\n  let schedule = props.schedule;\r\n  schedule.sort(compareTime);\r\n  const day = props.day.slice(0, 1).toUpperCase() + props.day.slice(1);\r\n\r\n  return (\r\n    <div style={todayStyle}>\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <p style={dayStyle}>{day}</p>\r\n        <p style={dateStyle}>{getTodayDate(props.day)}</p>\r\n      </div>\r\n\r\n      {schedule.length === 0 ? (\r\n        <p style={emptyStyle}>Slow day...</p>\r\n      ) : (\r\n        props.schedule.map((anime, i) => (\r\n          <TodayItem anime={anime} key={anime.mal_id} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst emptyStyle = {\r\n  borderTop: \"solid 1.2px #444\",\r\n  paddingTop: \"10px\",\r\n};\r\n\r\nconst todayStyle = {\r\n  padding: \"10px 10px 4px 10px\",\r\n  margin: \"5px\",\r\n  minWidth: \"150px\",\r\n  height: \"inherit\",\r\n  flex: \"1\",\r\n  backgroundColor: \"#222\",\r\n  //border: 'solid 1px #EEE',\r\n  borderRadius: \"10px\",\r\n};\r\n\r\nconst dayStyle = {\r\n  fontSize: \"18px\",\r\n};\r\n\r\nconst dateStyle = {\r\n  fontSize: \"13px\",\r\n  filter: \"opacity(0.65)\",\r\n};\r\n\r\nToday.propTypes = {\r\n  day: PropTypes.string.isRequired,\r\n  schedule: PropTypes.array.isRequired,\r\n};\r\n","import { DateTime } from \"luxon\";\r\n\r\nexport function tokyoToLocalTime(day, time) {\r\n  const weekdays = {\r\n    Sundays: 7,\r\n    Mondays: 1,\r\n    Tuesdays: 2,\r\n    Wednesdays: 3,\r\n    Thursdays: 4,\r\n    Fridays: 5,\r\n    Saturdays: 6,\r\n  };\r\n\r\n  const [hour, minute] = time.split(\":\").map(Number);\r\n  const targetWeekday = weekdays[day];\r\n\r\n  let tokyoNow = DateTime.now().setZone(\"Asia/Tokyo\");\r\n\r\n  // Set to today's date at target time\r\n  let targetTokyo = tokyoNow.set({ hour, minute, second: 0, millisecond: 0 });\r\n\r\n  // If the target weekday is before today, or it's today but earlier in time, advance\r\n  while (targetTokyo.weekday !== targetWeekday || targetTokyo <= tokyoNow) {\r\n    targetTokyo = targetTokyo.plus({ days: 1 });\r\n  }\r\n\r\n  // Convert to user's local time zone\r\n  const localTime = targetTokyo.setZone(\r\n    Intl.DateTimeFormat().resolvedOptions().timeZone\r\n  );\r\n  return localTime;\r\n\r\n  // return localTime.toFormat(\"cccc, h:mm a\"); // e.g., \"Thursday, 11:26 AM\"\r\n}\r\n\r\nexport function startToLocalTime(start) {\r\n  return DateTime.fromISO(start);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Today from \"./Today\";\r\nimport PropTypes from \"prop-types\";\r\nimport { tokyoToLocalTime, startToLocalTime } from \"./tokyoToLocalTime\";\r\n\r\nimport \"./Schedule.css\";\r\n\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst emptySchedule = {\r\n  sunday: [],\r\n  monday: [],\r\n  tuesday: [],\r\n  wednesday: [],\r\n  thursday: [],\r\n  friday: [],\r\n  saturday: [],\r\n};\r\n\r\nconst days = [\r\n  \"sunday\",\r\n  \"monday\",\r\n  \"tuesday\",\r\n  \"wednesday\",\r\n  \"thursday\",\r\n  \"friday\",\r\n  \"saturday\",\r\n];\r\n\r\nclass Schedule extends Component {\r\n  state = {\r\n    mySchedule: emptySchedule,\r\n    watchlist: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    // await this.loadSchedule();\r\n    this.getSchedule();\r\n  };\r\n\r\n  getSchedule = async () => {\r\n    await this.props.setWatchlist();\r\n\r\n    const watchlist = this.props.watching.slice();\r\n\r\n    if (watchlist.length === 0) {\r\n      this.setState({\r\n        mySchedule: emptySchedule,\r\n        watchlist: [],\r\n      });\r\n    }\r\n\r\n    let schedule = {\r\n      sunday: [],\r\n      monday: [],\r\n      tuesday: [],\r\n      wednesday: [],\r\n      thursday: [],\r\n      friday: [],\r\n      saturday: [],\r\n    };\r\n\r\n    // add each anime to schedule based on local time\r\n    watchlist.forEach((anime) => {\r\n      let day = anime.broadcast.day;\r\n      let time = anime.broadcast.time;\r\n      let localTime;\r\n      if (day === null || time === null) {\r\n        localTime = startToLocalTime(anime.aired.from);\r\n      } else {\r\n        localTime = tokyoToLocalTime(anime.broadcast.day, anime.broadcast.time);\r\n      }\r\n\r\n      const dayOfWeek = localTime.toFormat(\"cccc\").toLowerCase();\r\n      anime.localTime = localTime;\r\n      schedule[dayOfWeek].push(anime);\r\n    });\r\n\r\n    this.setState({\r\n      mySchedule: schedule,\r\n      watchlist: watchlist,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const schedule = this.state.mySchedule;\r\n    return (\r\n      <>\r\n        <Link to=\"schedule\" smooth={true} offset={-90} duration={600}>\r\n          <button className=\"get-btn\" onClick={() => this.getSchedule()}>\r\n            Get Schedule\r\n          </button>\r\n        </Link>\r\n\r\n        <p style={tipStyle}>* times are displayed in your local time zone</p>\r\n        <div style={scheduleStyle} name=\"schedule\">\r\n          {days.map((day) => (\r\n            <Today day={day} schedule={schedule[day]} key={day} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst scheduleStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  alignItems: \"flex-start\",\r\n  flexWrap: \"wrap\",\r\n  color: \"#EEE\",\r\n};\r\n\r\nconst tipStyle = {\r\n  textAlign: \"left\",\r\n  paddingLeft: \"10px\",\r\n  color: \"#EEE\",\r\n  marginTop: \"40px\",\r\n};\r\n\r\nSchedule.propTypes = {\r\n  watching: PropTypes.array.isRequired,\r\n  setWatchlist: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Schedule;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { instanceOf } from \"prop-types\";\r\nimport Header from \"./components/Header\";\r\nimport AniCards from \"./components/AniCards\";\r\nimport Schedule from \"./components/Schedule\";\r\n\r\nimport { withCookies, Cookies } from \"react-cookie\";\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { cookies } = props;\r\n    const displayedCookie = cookies.get(\"numDisplayed\");\r\n    const displayed = displayedCookie == null ? 20 : parseInt(displayedCookie);\r\n    this.state = {\r\n      watching: cookies.get(\"watching\") || [],\r\n      seasonal: [],\r\n      renderWatchlist: cookies.get(\"watching\") || [],\r\n      numDisplayed: displayed,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.loadSeason();\r\n    this.filterOngoing();\r\n  };\r\n\r\n  filterOngoing() {\r\n    const { watching, seasonal } = this.state;\r\n    const seasonalIDs = seasonal.map((anime) => anime.mal_id);\r\n\r\n    const filtered = watching.filter((id) => seasonalIDs.includes(id));\r\n    this.watchingCookie(filtered);\r\n    this.setState({\r\n      watching: filtered,\r\n    });\r\n  }\r\n\r\n  watchingCookie(watching) {\r\n    const { cookies } = this.props;\r\n\r\n    const yearLater = new Date();\r\n    yearLater.setFullYear(yearLater.getFullYear() + 1);\r\n\r\n    cookies.set(\"watching\", watching, { expires: yearLater });\r\n    this.setState({ watching });\r\n  }\r\n  numDisplayedCookie(numDisplayed) {\r\n    const { cookies } = this.props;\r\n\r\n    const yearLater = new Date();\r\n    yearLater.setFullYear(yearLater.getFullYear() + 1);\r\n\r\n    cookies.set(\"numDisplayed\", numDisplayed, { expires: yearLater });\r\n    this.setState({ numDisplayed });\r\n  }\r\n\r\n  loadSeason = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.jikan.moe/v4/seasons/now?sfw&filter=tv`\r\n      );\r\n      const data = await response.json();\r\n      // filter duplicates (api bug)\r\n      const uniqueData = Array.from(\r\n        new Map(data.data.map((item) => [item.mal_id, item])).values()\r\n      );\r\n      this.setState({ seasonal: uniqueData });\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch season data:\", err);\r\n    }\r\n  };\r\n\r\n  addAnime = (id) => {\r\n    this.setState({\r\n      watching: this.state.watching.concat(id),\r\n    });\r\n    this.watchingCookie(this.state.watching.concat(id));\r\n  };\r\n\r\n  delAnime = (id) => {\r\n    const watching = this.state.watching.filter((itemID) => itemID !== id);\r\n    this.setState({\r\n      watching: watching,\r\n    });\r\n    this.watchingCookie(watching);\r\n  };\r\n\r\n  setWatchlist = () => {\r\n    const watchingAnime = this.state.seasonal.filter((anime) =>\r\n      this.state.watching.includes(anime.mal_id)\r\n    );\r\n\r\n    this.setState({\r\n      renderWatchlist: watchingAnime,\r\n    });\r\n  };\r\n\r\n  showMore = (more) => {\r\n    const { seasonal, numDisplayed } = this.state;\r\n\r\n    if (more) {\r\n      if (numDisplayed < seasonal.length) {\r\n        this.numDisplayedCookie(numDisplayed + 10);\r\n\r\n        this.setState({\r\n          numDisplayed: numDisplayed + 10,\r\n        });\r\n      }\r\n    } else {\r\n      if (numDisplayed > 0) {\r\n        this.numDisplayedCookie(numDisplayed - 10);\r\n\r\n        this.setState({\r\n          numDisplayed: numDisplayed - 10,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { renderWatchlist, watching } = this.state;\r\n    const animes = this.state.seasonal.slice(0, this.state.numDisplayed);\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n\r\n        <AniCards\r\n          animes={animes}\r\n          selectedCards={watching}\r\n          addAnime={this.addAnime}\r\n          delAnime={this.delAnime}\r\n          showMore={this.showMore}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Schedule watching={renderWatchlist} setWatchlist={this.setWatchlist} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}